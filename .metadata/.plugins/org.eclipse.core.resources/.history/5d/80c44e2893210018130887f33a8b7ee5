package algorithms;

public class LinkedListIntersection
{
	public ListNode intersection(ListNode l1, ListNode l2)
	{
		if (l1 == null || l2 == null)
			return null;

		int len1 = 0, len2 = 0;

		ListNode curr1 = l1, curr2 = l2;

		while (curr1 != null)
		{
			len1++;
			curr1 = curr1.next;
		}

		while (curr2 != null)
		{
			len2++;
			curr2 = curr2.next;
		}

		if (len1 > len2)
			while (len1-- != len2)
				l1 = l1.next;
		else
			while (len2-- != len1)
				l2 = l2.next;

		while (l1.val != l2.val)
		{
			l1 = l1.next;
			l2 = l2.next;

			if (l1 == null || l2 == null)
				return null;
		}

		return l1;
	}
}
