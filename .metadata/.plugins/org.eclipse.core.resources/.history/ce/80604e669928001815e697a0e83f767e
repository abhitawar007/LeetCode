package testing;

import algorithms.TreeAlgos;
import algorithms.TreeNode;

public class TreeTesting
{

	public static void main(String[] args)
	{
		TreeAlgos tree = new TreeAlgos();
		// int[] arr = { 1, 2, 3, 4, 5 };
		// int[] arr = { -10, -5, 0, 5 };
		// TreeNode root = tree.createBSTfromArray(arr);
		// tree.printTree(root);

		// level order list creation
		TreeNode root = new TreeNode(10);
		TreeNode dummy = root;
		root.left = new TreeNode(5);
		root.right = new TreeNode(-3);
		TreeNode p = root.left;
		root = root.left;
		p = p.right;
		p.right = new TreeNode(1);
		root.left = new TreeNode(3);
		root.right = new TreeNode(2);
		root = root.left;
		root.left = new TreeNode(3);
		root.right = new TreeNode(-2);
		root = root.left;
		root.left = new TreeNode(10);
		root = dummy.right;
		root.right = new TreeNode(11);

		TreeNode q = root.left;
//		System.out.println(tree.commonAncestor(dummy, p, q).val);
		
		System.out.println("Number of paths with given sum : " + tree.pathSum(dummy, 8));

		// System.out.println(tree.isBalanced(dummy));

		// List<List<Integer>> list = tree.levelOrder(dummy);
		// for (List<Integer> lst : list)
		// {
		// for (Integer i : lst)
		// System.out.print(i + " ");
		// System.out.println();
		// }

	}

}
